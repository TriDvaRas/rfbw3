/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t -o src/components/Three/Models/Building.tsx garbage/models/Building.glb
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    large_buildingC_1: THREE.Mesh
    large_buildingC_1_1: THREE.Mesh
    large_buildingC_1_2: THREE.Mesh
    large_buildingC_1_3: THREE.Mesh
    large_buildingC_1_4: THREE.Mesh
  }
  materials: {
    roof: THREE.MeshStandardMaterial
    window: THREE.MeshStandardMaterial
    door: THREE.MeshStandardMaterial
    border: THREE.MeshStandardMaterial
    _defaultMat: THREE.MeshStandardMaterial
  }
}

export function Building(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Building-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.large_buildingC_1.geometry} material={materials.roof} />
      <mesh geometry={nodes.large_buildingC_1_1.geometry} material={materials.window} />
      <mesh geometry={nodes.large_buildingC_1_2.geometry} material={materials.door} />
      <mesh geometry={nodes.large_buildingC_1_3.geometry} material={materials.border} />
      <mesh geometry={nodes.large_buildingC_1_4.geometry} material={materials._defaultMat} />
    </group>
  )
}

useGLTF.preload('/Building-transformed.glb')
