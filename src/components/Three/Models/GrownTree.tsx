/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t -o src/components/Three/Models/GrownTree.tsx garbage/models/GrownTree.glb
This work is based on "Polygon Tree Pack" (https://sketchfab.com/3d-models/polygon-tree-pack-36dacc2aeacb4f9f94385f63b978c3ca) by StreakByte (https://sketchfab.com/StreakByte) licensed under CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useControls } from 'leva'

type GLTFResult = GLTF & {
  nodes: {
    Object_647: THREE.Mesh
    Object_649: THREE.Mesh
  }
  materials: {
    light_green: THREE.MeshStandardMaterial
    brown: THREE.MeshStandardMaterial
  }
}

export function GrownTree(props: JSX.IntrinsicElements['group'] & { headless?: boolean, color?: string }) {
  const { nodes, materials } = useGLTF('/GrownTree-transformed.glb') as GLTFResult
  const headMat = materials.light_green.clone()
  if (props.color)
    headMat.color = new THREE.Color(props.color)
  return (
    <group {...props} dispose={null}>
      {!props.headless && <mesh geometry={nodes.Object_647.geometry} material={headMat} scale={0.171} position={[.02, .3, -.14]} />}
      <mesh geometry={nodes.Object_649.geometry} material={materials.brown} scale={0.171} />
    </group>
  )
}

useGLTF.preload('/GrownTree-transformed.glb')
