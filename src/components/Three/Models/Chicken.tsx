/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t -o src/components/Three/Models/Chicken.tsx garbage/models/Chicken.glb
Chicken by jeremy [CC-BY] (https://creativecommons.org/licenses/by/3.0/) via Poly Pizza (https://poly.pizza/m/1YE8U35HXsI)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['Cube035_Cube034-Mesh']: THREE.Mesh
    ['Cube035_Cube034-Mesh_1']: THREE.Mesh
    ['Cube035_Cube034-Mesh_2']: THREE.Mesh
    ['Cube035_Cube034-Mesh_3']: THREE.Mesh
    ['Cube035_Cube034-Mesh_4']: THREE.Mesh
  }
  materials: {
    FF9800: THREE.MeshStandardMaterial
    FFFFFF: THREE.MeshStandardMaterial
    ['1A1A1A']: THREE.MeshStandardMaterial
    F44336: THREE.MeshStandardMaterial
    ['455A64']: THREE.MeshStandardMaterial
  }
}

export function Chicken(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Chicken-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['Cube035_Cube034-Mesh'].geometry} material={materials.FF9800} />
      <mesh geometry={nodes['Cube035_Cube034-Mesh_1'].geometry} material={materials.FFFFFF} />
      <mesh geometry={nodes['Cube035_Cube034-Mesh_2'].geometry} material={materials['1A1A1A']} />
      <mesh geometry={nodes['Cube035_Cube034-Mesh_3'].geometry} material={materials.F44336} />
      <mesh geometry={nodes['Cube035_Cube034-Mesh_4'].geometry} material={materials['455A64']} />
    </group>
  )
}

useGLTF.preload('/Chicken-transformed.glb')
