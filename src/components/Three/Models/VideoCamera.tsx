/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t -o src/components/Three/Models/VideoCamera.tsx garbage/models/VideoCamera.glb
Video Camera by dook [CC-BY] (https://creativecommons.org/licenses/by/3.0/) via Poly Pizza (https://poly.pizza/m/7IV9LlcdNB)
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder003_1: THREE.Mesh
    Cylinder003_2: THREE.Mesh
  }
  materials: {
    Grey: THREE.MeshStandardMaterial
    Back: THREE.MeshStandardMaterial
  }
}

export function VideoCamera(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/VideoCamera-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 2.005, -1.028]} rotation={[-Math.PI / 2, 1.571, 0]} scale={[100, 100, 18.464]}>
        <mesh geometry={nodes.Cylinder003_1.geometry} material={materials.Grey} />
        <mesh geometry={nodes.Cylinder003_2.geometry} material={materials.Back} />
      </group>
    </group>
  )
}

useGLTF.preload('/VideoCamera-transformed.glb')
