/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t -o src/components/Three/Models/NewIsland.tsx garbage/models/Grass Platform.glb
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    ['GrassPlatform_Cylinder001-Mesh']: THREE.Mesh
    ['GrassPlatform_Cylinder001-Mesh_1']: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    Grass: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/Grass Platform-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes['GrassPlatform_Cylinder001-Mesh'].geometry} material={materials.Dirt} />
      <mesh geometry={nodes['GrassPlatform_Cylinder001-Mesh_1'].geometry} material={materials.Grass} />
    </group>
  )
}

useGLTF.preload('/Grass Platform-transformed.glb')
