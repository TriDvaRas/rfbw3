/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t -o src/components/Three/Models/Island.tsx garbage/models/Island.gltf
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useControls } from 'leva'
type GLTFResult = GLTF & {
  nodes: {
    ['GrassPlatform_Cylinder001-Mesh']: THREE.Mesh
    ['GrassPlatform_Cylinder001-Mesh_1']: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    Grass: THREE.MeshStandardMaterial
  }
}




const grassMaterials = {
  default: new THREE.MeshPhongMaterial({
    color: "#ffb9d8",
  }),
  border: new THREE.MeshPhongMaterial({
    color: "#ff0000",
  }),
  start: new THREE.MeshPhongMaterial({
    color: "#00ff00",
  }),
  unmarked: new THREE.MeshPhongMaterial({
    color: "#b8e6df",
  }),
  anime: new THREE.MeshPhongMaterial({
    color: "#ffabf7",
  }),
  game: new THREE.MeshPhongMaterial({
    color: "#99ff73",
  }),
  movie: new THREE.MeshPhongMaterial({
    color: "#ffec73",
  }),
}



export function Island(props: JSX.IntrinsicElements['group'] & { color: keyof typeof grassMaterials }) {
  const { nodes, materials } = useGLTF('/Grass Platform-transformed.glb') as GLTFResult
  // const { grassColor } = useControls("Island", { grassColor: `#${grassMaterials.movie.color.getHexString()}` })
  // const GrassMaterial = new THREE.MeshPhongMaterial({
  //   color: grassColor ?? "#ff99c3",
  // })

  grassMaterials.movie.color.set(`#${grassMaterials.movie.color.getHexString()}`)
  return (
    <group {...props} dispose={null} >
      <mesh geometry={nodes['GrassPlatform_Cylinder001-Mesh'].geometry} material={materials.Dirt} />
      {/* <mesh geometry={nodes['GrassPlatform_Cylinder001-Mesh_1'].geometry} material={GrassMaterial} /> */}
      <mesh geometry={nodes['GrassPlatform_Cylinder001-Mesh_1'].geometry} material={grassMaterials[props.color]} />
    </group>
  )
}

useGLTF.preload('/Grass Platform-transformed.glb')
