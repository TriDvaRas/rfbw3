/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 -T -t -o src/components/Three/Models/Island.tsx garbage/models/Island.gltf
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
type GLTFResult = GLTF & {
  nodes: {
    ['GrassPlatform_Cylinder001-Mesh']: THREE.Mesh
    ['GrassPlatform_Cylinder001-Mesh_1']: THREE.Mesh
  }
  materials: {
    Dirt: THREE.MeshStandardMaterial
    Grass: THREE.MeshStandardMaterial
  }
}



const grassMaterials = {
  green: new THREE.MeshPhongMaterial({
    color: "#4dff00",
  }),
  red: new THREE.MeshPhongMaterial({
    color: "#ff0000",
  }),
  blue: new THREE.MeshPhongMaterial({
    color: "#0000ff",
  }),
  yellow: new THREE.MeshPhongMaterial({
    color: "#ffff00",
  }),

}




export function Island(props: JSX.IntrinsicElements['group'] & { color: keyof typeof grassMaterials }) {
  const { nodes, materials } = useGLTF('/Grass Platform-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null} >
      <mesh geometry={nodes['GrassPlatform_Cylinder001-Mesh'].geometry} material={materials.Dirt} />
      <mesh geometry={nodes['GrassPlatform_Cylinder001-Mesh_1'].geometry} material={grassMaterials[props.color]} />
    </group>
  )
}

useGLTF.preload('/Grass Platform-transformed.glb')
